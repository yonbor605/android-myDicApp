apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion



    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    api rootProject.ext.dependencies["appcompat-v7"]
    api rootProject.ext.dependencies["cardview-v7"]
    api rootProject.ext.dependencies["recyclerview-v7"]
    api rootProject.ext.dependencies["design"]
//    implementation rootProject.ext.dependencies["support-core-ui"]

//    implementation rootProject.ext.dependencies["retrofit"]
//    implementation rootProject.ext.dependencies["converter-fastjson-android"]
//    implementation rootProject.ext.dependencies["okhttp-logging-interceptor"]
//    implementation rootProject.ext.dependencies["retrofit-adapter-rxjava2"]

    api rootProject.ext.dependencies["rxjava"]
    api rootProject.ext.dependencies["rxandroid"]
    api rootProject.ext.dependencies["rxbinding"]
    api rootProject.ext.dependencies["rxbinding-support-v4"]
    api rootProject.ext.dependencies["rxbinding-appcompat-v7"]
    api rootProject.ext.dependencies["rxbinding-design"]
    api rootProject.ext.dependencies["rxbinding-recyclerview-v7"]
    api rootProject.ext.dependencies["rxlifecycle"]
    // If you want to bind to Android-specific lifecycles
    api rootProject.ext.dependencies["rxlifecycle-android"]
    // If you want pre-written Activities and Fragments you can subclass as providers
    api rootProject.ext.dependencies["rxlifecycle-components"]
    // If you want to use Navi for providers
    api rootProject.ext.dependencies["rxlifecycle-navi"]
    api rootProject.ext.dependencies["rxpermissions"]
//    implementation rootProject.ext.dependencies["rxbroadcast"]
//    implementation rootProject.ext.dependencies["rx-preferences"]

//    implementation rootProject.ext.dependencies["logger"]
    //loading
    api 'com.wang.avi:library:2.1.3'
    api rootProject.ext.dependencies["ultra-ptr"]
    api rootProject.ext.dependencies["recyclerview-swipe"]
//    implementation rootProject.ext.dependencies["fastjson"]
//    implementation rootProject.ext.dependencies["convenientbanner"]
//    implementation 'info.hoang8f:android-segmented:1.0.6'
//    implementation rootProject.ext.dependencies["fresco"]
//    implementation rootProject.ext.dependencies["eventbus"]
    api rootProject.ext.dependencies["multidex"]
//    implementation 'com.yqritc:recyclerview-flexibledivider:1.4.0'
//    implementation 'com.yanzhenjie:recyclerview-swipe:1.0.4'
    api 'com.nineoldandroids:library:2.4.0'
    //autolayout
    api rootProject.ext.dependencies["autolayout"]
}
